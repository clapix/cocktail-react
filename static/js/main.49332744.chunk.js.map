{"version":3,"sources":["data/initial.js","axios.js","data/actions/state.js","data/actions/api.js","data/reducer.js","data/store.js","components/Header.js","components/Footer.js","components/Cocktail/Cocktail.js","components/Cocktail/index.js","components/Loading/Loading.js","components/Loading/index.js","components/DropDownMenu/DropDownMenu.js","components/DropDownMenu/DropDownMenuHome.js","components/DropDownMenu/DropDownMenuArchive.js","components/Archive/Archive.js","components/Archive/index.js","components/AgeConfirm/AgeConfirm.js","components/AgeConfirm/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["initial","spirits","submitted","cocktails","loaded","selected","cocktail","displayAgeConfirm","axios","create","baseURL","headers","Accept","cocktailList","data","type","getList","state","dispatch","get","then","getSpirits","spiritsList","reducer","action","getCocktails","listSpirits","ageConfirm","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","this","props","className","href","src","alt","React","Component","Footer","Cocktail","handleLoadCocktail","id","ingredients","String","description","number","repeat","split","imageURL","title","glass","author","rating","cocktailGlass","cocktailAuthor","cocktailImageURL","map","current","index","item","key","method","connect","getCocktail","Loading","handleLoad","children","style","width","DropDownMenu","selectedOption","handleChangeSpirit","bind","handleSubmit","event","preventDefault","setState","handleSave","history","push","value","console","log","spirit","label","toLowerCase","replace","charAt","toUpperCase","Form","onSubmit","Label","heading","onChange","options","Button","withRouter","handleSpiritList","Archive","string","sortedCocktails","sort","a","b","DropDownMenuArchive","titleCaseHeading","AgeConfirm","handleAgeConfirm","e","handleAge","variant","App","length","exact","path","render","DropDownMenuHome","component","match","params","Boolean","location","hostname","getState","ReactDOM","setCocktail","name","document","getElementById","navigator","serviceWorker","ready","registration","unregister","subscribe"],"mappings":"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","file":"static/js/main.49332744.chunk.js","sourcesContent":["const initial = {\n    spirits: [],\n    submitted: false,\n    cocktails: [],\n    loaded: false,\n    selected: 1,\n    cocktail: {},\n    displayAgeConfirm: true,\n};\n\nexport default initial;","import axios from \"axios\";\n// return a new version of axios with useful settings applied\nexport default axios.create({\n    baseURL: \"http://homestead.test/api/\",\n    // params: {\n    //     key: \"b1a4b1a4b1a4-api-key-b1a4b1a4ab1a4\",\n    // },\n    headers: {\n        Accept: \"application/json\",\n    },\n});","export const cocktailList = (data, selected) => ({\n    type: 'cocktailList',\n    submitted: true,\n    loaded: true,\n    cocktails: data,\n    selected: selected,\n})\n\nexport const cocktails = (data,) => ({\n    type: 'cocktails',\n    loaded: true,\n    // cocktails: data,\n    cocktail: data,  \n})\n\nexport const spiritsList = (data, state) => ({\n    type: 'spiritsList',\n    spirits: data,\n})\n\nexport const setSelected = (state) => ({\n    type: 'setSelected',\n\n    selected: state.selected,\n})\n\nexport const submitAgeConfirm = (state) => ({\n   \n        type: 'submitAgeConfirm',\n        displayAgeConfirm: false,\n        \n  \n\n})","import axios from '../../axios';\nimport { cocktailList, spiritsList, setSelected, cocktails } from './state';\n\n//API request for all cocktails on system for given spirit, dispatching cocktailList state action \nexport const getList = (state) => dispatch => {\n    axios.get(`/spirits/${state.selected}`).then(({ data }) => {\n        // dispatch();\n        // setSelected(state.selected)\n        dispatch(cocktailList(data.data, state.selected));\n    })\n}\n\n//API request to get all inputted spirits on system for selection by user for given spirit, dispatching cocktailList state action \nexport const getSpirits = () => dispatch => {\n    axios.get(`/spirits/`).then(({ data }) => {\n        dispatch(spiritsList(data.data));\n    })\n}\n\n//API request for all cocktails on system, dispatching cocktailList state action \nexport const getCocktails = () => dispatch => {\n    // now use axios to make an API request\n    axios.get(\"/cocktails\").then(({ data }) => {\n        dispatch(cocktailList(data.data));\n}); };\n\n//API request for single cocktail, dispatching cocktails state action \nexport const getCocktail = (id) => dispatch => {\n    // now use axios to make an API request\n    axios.get(`/cocktails/${id}`).then(({ data }) => {\n        dispatch(cocktails(data.data));\n}); };\n\n","\n// import initial, for reset\nimport initial from \"./initial\";\nimport { getSpirits } from \"./actions/api\";\nimport { setSelected, submitAgeConfirm } from \"./actions/state\";\n\nconst getCocktails = (state, { \n        cocktails\n}) => {\n    return {\n        ...state,\n        submitted: true,\n        loaded: true,\n        cocktails: cocktails,\n\n    }\n}\n\nconst listSpirits = (state, { spirits }) => {\n    return {\n        ...state,\n        spirits: spirits,\n    }\n}\n\nconst selected = (state, { selected }) => {\n    return {\n        ...state,\n        selected,\n    }\n}\n\nconst cocktailList = (state, { cocktail, selected }) => {\n    return {\n        ...state,\n        cocktail,\n        selected\n    }\n}\n\nconst ageConfirm = (state, { displayAgeConfirm }) => {\n    // console.log(displayAgeConfirm);\n    return {\n        ...state,\n        displayAgeConfirm: false,\n    }\n    \n}\n// main reducer function\nconst reducer = (state, action) => {\n    switch (action.type) {\n        //function composition for multiple behaviours on one action\n        case \"cocktailList\": return getCocktails(state, action);\n        case \"spiritsList\": return listSpirits(state, action);\n        case \"setSelected\": return selected(state, action);\n        case \"cocktails\": return cocktailList(state, action);\n        case \"submitAgeConfirm\": return ageConfirm(state,action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport initial from \"./initial\";\nimport reducer from \"./reducer\";\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancers(applyMiddleware(thunk))\n);\nexport default store;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n\n    render() {\n\n        let displayAgeConfirm = this.props;\n\n        return (\n            <Router>\n                <header className=\"page-header\">\n                    <a href=\"/\">\n                        <img\n                            src=\"../../assets/logo-header.png\"\n                            alt=\"mixologic-logo\" />\n                    </a>\n\n                    <nav className=\"header-nav\">\n                        <ul className=\"header-ul\">\n                            <li><a className=\"header-link\" \n                            href=\"/cocktails\">\n                            Browse Cocktails</a></li>\n                        </ul>\n                    </nav>\n                    \n                </header>\n            </Router>)\n\n    };\n}\n\nexport default Header;","import React from \"react\";\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <footer className=\"page-footer\">\n                <p className=\"copyright\">&copy; Eleanor Judd, Claudia Piccioni, Charlotte Drew</p>\n                <p className=\"warning\">Always drink responsibly.</p>\n            </footer>\n        )\n    };\n}\n\nexport default Footer;","import React, { Component } from \"react\";\n\nclass Cocktail extends Component {\n    \n    componentDidMount() {\n        this.props.handleLoadCocktail(this.props.id); \n    }\n\n    ingredients(){\n        let { ingredients } = this.props.cocktail;\n        return String(ingredients ? ingredients : \"\");\n    }\n\n    method(){\n        let { description } = this.props.cocktail;\n        return String(description ? description : \"\");\n    }\n    \n    rating(number){\n        return \"star, \".repeat(number).split(\", \");\n    }\n\n    render () {\n        const { cocktail } = this.props;\n        const { imageURL, title, glass, author, rating } = cocktail;\n        let cocktailGlass = glass ? glass : \"tumbler\";\n        let cocktailAuthor = author ? author : \"Anonymous\";\n        let cocktailImageURL = imageURL ? imageURL : \"cocktail.png\";\n\n        return (\n        <section className=\"cocktail-single-page\">\n            <img className=\"cocktail-image-background\" src={\"../../assets/drinks.jpg\"} alt=\"cocktails with friends\"/>\n            \n            <section className=\"cocktail-single-content\">\n                <h1 className=\"title-offset\">{ title }</h1>\n\n                <div className=\"image-wrap\">\n                    <img className=\"cocktail-image\" src={\"../../assets/\" + cocktailImageURL} alt={ title }/>\n                </div>\n                <div className=\"rating-wrap\">\n                <p>Rating:</p>\n                    {this.rating(rating).map((current, index) => (\n                        <img className=\"star-icon\" src=\"../../assets/star.svg\" alt=\"star icon\"/>\n                    ))}\n                </div>\n\n                <div className=\"glass-wrap\">\n                    <p>Glass:</p>\n                    <img  className=\"cocktail-glass\" src={\"../../assets/glasses/\" + glass + \".svg\"} alt={ glass }/> \n                </div>\n                \n                <div className=\"ingredients-block single-page-block card\">\n                    <h2>Ingredients</h2>\n                    <ul >{ this.ingredients().split(\", \").map((item, index) => (\n                        <li key={index}>{ item }</li>\n                    )) }</ul>\n                </div>\n                \n                <div className=\"description-block single-page-block card\">\n                    <h2>Method</h2>\n                    <ul >{ this.method().split(\".\").map((item, index) => (\n                        <li key={index}>{ item }</li>\n                    )) }</ul>\n                    <p>Serve in a { cocktailGlass } glass </p>\n                </div>\n\n                \n                <p className=\"author\">Author: { cocktailAuthor }</p> \n            </section>\n        </section>\n        )\n    }  \n    \n}\n\nexport default Cocktail;","import { connect } from \"react-redux\";\nimport Cocktail from \"./Cocktail\";\nimport { getCocktail } from \"../../data/actions/api\";\n\n\nconst mapStateToProps = ({ \n    cocktail,\n    \n}) => {\n    return {\n        cocktail,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleLoadCocktail: (id) => dispatch(getCocktail(id)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cocktail);","import React, { Component } from \"react\";\n\n\nclass Loading extends Component {\n    componentDidMount() {\n        if (!this.props.loaded) {\n            this.props.handleLoad();\n        }\n    }\n\n    render() {\n      \n    const { children, loaded } = this.props;\n\n    return loaded ? children : (\n      <div className=\"progress\">\n        <div\n          className=\"progress-bar progress-bar-striped active\"\n          style={{ width: \"100%\" }}\n/> </div>\n); }\n}\nexport default Loading;","import { connect } from \"react-redux\";\nimport Loading from \"./Loading\";\nimport { getCocktails } from \"../../data/actions/api\";\n\n\nconst mapStateToProps = ({ loaded }) => ({\n    loaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleLoad: () => dispatch(getCocktails()),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);","import React from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport Select from 'react-select';\n\n// let spiritName = ;\n\n\n\nclass DropDownMenu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: 1,\n            selectedOption: {},\n            submitted: false,\n        }\n        this.handleChangeSpirit = this.handleChangeSpirit.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({\n            submitted: true\n        })\n\n        // this.props.handleSelected({...this.state});\n        this.props.handleSave({ ...this.state });\n        this.props.history.push(`/spirits/${this.state.selected}`);\n    }\n\n    handleChangeSpirit(selectedOption) {\n\n        this.setState({ \n            selectedOption,\n            selected: selectedOption.value,\n        });\n        console.log(`Option selected:`, selectedOption, \" selected in state: \", selectedOption.value);\n\n        // console.log(event);\n        // let spiritName = event.currentTarget.value;\n        // console.log(spiritName);\n\n        // let { spirits } = this.props;\n        // let spirit = spirits.filter(spirit => spirit.name === spiritName);\n\n        // this.setState({\n        //     selected: spirit.id,\n        // });\n    }\n\n    render() {\n        const spiritsList = this.props.spirits.map(spirit => {\n            return {\n                value: spirit.id, \n                label: spirit.spirit.toLowerCase().replace(spirit.spirit.charAt(0), spirit.spirit.charAt(0).toUpperCase()),\n            }\n        });\n\n        const { className, spirits } = this.props;\n        let selectedOption = this.state.selected;\n\n        return (\n            <div className={ className }>\n                <Form className=\"form\" onSubmit={this.handleSubmit}>\n                    <Form.Label>{ this.props.heading }</Form.Label>\n                    {/* <Form.Label \n                        className=\"form-label\"\n                        list=\"spirit-choice\" \n                        value={ this.props.heading } \n                    />  */}\n                 \n                    <Select\n                        className=\"choose-spirit\"\n                        value={ selectedOption.label }\n                        onChange={ this.handleChangeSpirit }\n                        options={ spiritsList }\n                    />\n                    \n                            {/* { spirits.map((spirit) =>\n                                <option\n                                    key={spirit.id}\n                                    value={spirit.spirit.toLowerCase().replace(spirit.spirit.charAt(0), spirit.spirit.charAt(0).toUpperCase())}\n                                />\n                            )} */}\n                    {/* </datalist> */}\n                        <Button type='submit' className=\"button\">Shake It!</Button>\n                    \n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(DropDownMenu);\n","import { connect } from 'react-redux';\nimport DropDownMenu from './DropDownMenu';\nimport { getList, getSpirits } from \"../../data/actions/api\";\nimport { setSelected } from \"../../data/actions/state\";\n\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.selected,\n        spirits: state.spirits,\n        className: \"jumbotron\",\n        heading: \"What Spirit Do You Have?\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: state => dispatch(getList(state)),\n        handleSpiritList: () => dispatch(getSpirits()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDownMenu);","import { connect } from 'react-redux';\nimport DropDownMenu from './DropDownMenu';\nimport { getList, getSpirits } from \"../../data/actions/api\";\nimport { setSelected } from \"../../data/actions/state\";\n\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.selected,\n        spirits: state.spirits,\n        className: \"menu\",\n        heading: \"\",\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: state => dispatch(getList(state)),\n        handleSpiritList: () => dispatch(getSpirits()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDownMenu);","import React, { Component } from \"react\";\nimport DropDownMenuArchive from \"../DropDownMenu/DropDownMenuArchive\";\n\nclass Archive extends Component {\n    titleCaseHeading(string) {\n        return string;\n    }\n\n    render() {\n      let { cocktails } = this.props;\n\n      const sortedCocktails = cocktails.sort((a, b)=>{\n        if (a.title < b.title) {\n          return -1; //nameA comes first\n        }\n        if (a.title > b.title) {\n          return 1; // nameB comes first\n        }\n        return 0;  // names must be equal\n      });\n      \n      \n      return ( \n        !cocktails ? <p>No cocktails yet!</p> :\n            <>\n            <DropDownMenuArchive/>\n                <section className=\"archive-grid\">\n                    { sortedCocktails.map((cocktail, index) => (\n\n                        \n                        <div className=\"card\" key={index}>\n                            <a href={\"/cocktails/\" + cocktail.id}>\n                                <h3>{ \n                                    this.titleCaseHeading(cocktail.title)\n                                    }\n                                </h3>\n                                <div className=\"card-overlay\">\n                                    <ul>{cocktail.ingredients.split(\", \").map((current, index) => (\n                                        <li key={index}>{current}</li>\n                                    ))}</ul>\n                                </div>\n                                <img \n                                    alt={ cocktail.title }\n                                    src={\"../../assets/\" + cocktail.imageURL} /></a>\n\n                        </div>\n                    )) \n\n                    }\n                </section>\n            </>\n        )\n    }\n}\nexport default Archive;","import { connect } from 'react-redux';\nimport Archive from './Archive';\n\nconst mapStateToProps = ({cocktails, submitted}) => {\n    return {\n        cocktails,\n        submitted,\n    }\n}\n\nexport default connect(mapStateToProps)(Archive);","import React, { Component } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\n\nclass AgeConfirm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleAgeConfirm = this.handleAgeConfirm.bind(this);\n    }\n\n    handleAgeConfirm(e) {\n        \n        e.preventDefault();\n        this.setState({ displayAgeConfirm: false });\n        this.props.handleAge();\n    \n    }\n\n    render() {\n\n        return (\n\n            <div className=\"age-confirm\">\n                <div className=\"text-box\">\n                    <h2 \n                        className=\"age-message\"\n                    >Please confirm that you are over the legal drinking age for your country of residence.</h2>\n                    <Form \n                        \n                        onSubmit={ this.handleAgeConfirm }>\n                        <Button\n                        className=\"age-button\"\n                        type=\"submit\" \n                        variant=\"btn btn-danger\"\n                        >Confirm</Button>\n                    </Form>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default AgeConfirm;","import { connect } from \"react-redux\";\nimport AgeConfirm from \"./AgeConfirm\";\nimport { submitAgeConfirm } from \"../../data/actions/state\";\n\nconst mapStateToProps = state => {\n    return {\n        displayAgeConfirm: state.displayAgeConfirm,\n        \n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleAge: () => dispatch(submitAgeConfirm()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AgeConfirm);\n","\nimport React, { Component } from \"react\";\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Cocktail from '../Cocktail';\nimport Loading from '../Loading';\nimport DropDownMenuHome from '../DropDownMenu/DropDownMenuHome';\nimport Archive from '../Archive';\nimport AgeConfirm from '../AgeConfirm';\n\nimport './../../style.css';\nimport {\n  BrowserRouter as Router,\n  Route, \n} from \"react-router-dom\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.handleLoad();\n}\n\nrender() { \n\n\n  const { spirits, submitted, displayAgeConfirm } = this.props;\n\n  if (!spirits.length){ \n    return <p>Loading...</p>\n  }\n  return ( \n    <Router>\n            <Header/>\n          \n            {/* home page */}\n            <Route exact path=\"/\" render={() => (\n              <>\n                { !displayAgeConfirm ? \n                <DropDownMenuHome /> :\n                <AgeConfirm/> }\n              </>\n            )} />\n            \n            {/* cocktails list page */}\n            <Loading>\n              <Route exact path=\"/cocktails\" component={ Archive } />\n            </Loading>\n            \n            \n            {/* spirit-specific cocktails list page */}\n            <Route exact path=\"/spirits/:id\" render={({ match }) => (\n              <Archive id={match.params.id} />\n            )} />\n\n            {/* single cocktail page */}\n            <Route exact path=\"/cocktails/:id\" render={({ match }) => (\n              <Cocktail id={match.params.id} />\n            )} />\n\n            <Footer />\n    </Router> \n\n  )}\n}\n\nexport default App;","import { connect } from \"react-redux\";\n// import Loading from \"./Loading\";\nimport { getSpirits } from \"../../data/actions/api\";\nimport App from \"./App\";\n\nconst mapStateToProps = ({ spirits, submitted, displayAgeConfirm }) => ({\n    spirits,\n    submitted,\n    displayAgeConfirm\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleLoad: () => dispatch(getSpirits()),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./data/store\";\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst render = () => {\n    let state = store.getState();\n\n    // pass in state.value as a value prop\n    ReactDOM.render(\n        <Provider store={store}>\n            <App\n                spirits={state.spirits}\n                selected={state.selected}\n                cocktails={state.cocktails}\n                setCocktail={() => store.dispatch({ type: \"spirits\", name: \"cocktails\" })}\n            />\n        </Provider>,\n        document.getElementById('root')\n    );\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nstore.subscribe(render);\nrender();"],"sourceRoot":""}